{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortType","NONE","isReversed","reorderOptions","setReorderOptions","isButtonClicked","setIsButtonClicked","visibleGoods","goods","ALPHABET","sort","LENGTH","a","b","length","reverse","getReorderedGoods","shouldShowResetButton","className","type","onClick","disabled","map","good","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAA4CC,mBAAyB,CACnEC,SAAUJ,EAASK,KACnBC,YAAY,IAFd,mBAAOC,EAAP,KAAuBC,EAAvB,KAIA,EAA8CL,oBAAS,GAAvD,mBAAOM,EAAP,KAAwBC,EAAxB,KACMC,EA5BD,SAA2BC,EAA3B,GACsC,IAAzCR,EAAwC,EAAxCA,SAAUE,EAA8B,EAA9BA,WACNK,EAAY,YAAOC,GAEzB,OAAQR,GACN,KAAKJ,EAASa,SACZF,EAAaG,OACb,MACF,KAAKd,EAASe,OACZJ,EAAaG,MAAK,SAACE,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAU7C,OAJIZ,GACFK,EAAaQ,UAGRR,EAScS,CAAkBnB,EAAiBM,GA0ClDc,EAAwBZ,EAE9B,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBf,EAAeH,WAAaJ,EAASa,SAAW,GAAK,YAClFW,QAhDyB,WAC3BjB,EAAeH,WAAaJ,EAASa,WAIzCL,EAAkB,CAChBJ,SAAUJ,EAASa,SACnBP,YAAY,IAEdI,GAAmB,KAwCbe,SAAUlB,EAAeH,WAAaJ,EAASa,SAJjD,iCASA,wBACEU,KAAK,SACLD,UAAS,4BAAuBf,EAAeH,WAAaJ,EAASe,OAAS,GAAK,YACnFS,QA7CmB,WACrBjB,EAAeH,WAAaJ,EAASe,SAIzCP,EAAkB,CAChBJ,SAAUJ,EAASe,OACnBT,YAAY,IAEdI,GAAmB,KAqCbe,SAAUlB,EAAeH,WAAaJ,EAASe,OAJjD,4BASA,wBACEQ,KAAK,SACLD,UAAS,4BAAuBf,EAAeD,WAAa,GAAK,YACjEkB,QA1CmB,WACzBhB,EAAkB,CAChBJ,SAAUG,EAAeH,SACzBE,YAAaC,EAAeD,aAE9BI,GAAmB,IAkCf,qBAQCW,GACC,wBACEE,KAAK,SACLD,UAAU,mBACVE,QA3Ce,WACvBhB,EAAkB,CAChBJ,SAAUJ,EAASK,KACnBC,YAAY,IAEdI,GAAmB,IAmCb,sBAUJ,6BACGC,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YC3InBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c12f3291.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(goods: string[],\n  { sortType, isReversed }: ReorderOptions) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reorderOptions, setReorderOptions] = useState<ReorderOptions>({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n  const [isButtonClicked, setIsButtonClicked] = useState(false);\n  const visibleGoods = getReorderedGoods(goodsFromServer, reorderOptions);\n\n  const handleSortAlphabetically = () => {\n    if (reorderOptions.sortType === SortType.ALPHABET) {\n      return;\n    }\n\n    setReorderOptions({\n      sortType: SortType.ALPHABET,\n      isReversed: false,\n    });\n    setIsButtonClicked(true);\n  };\n\n  const handleSortByLength = () => {\n    if (reorderOptions.sortType === SortType.LENGTH) {\n      return;\n    }\n\n    setReorderOptions({\n      sortType: SortType.LENGTH,\n      isReversed: false,\n    });\n    setIsButtonClicked(true);\n  };\n\n  const handleReverseOrder = () => {\n    setReorderOptions({\n      sortType: reorderOptions.sortType,\n      isReversed: !reorderOptions.isReversed,\n    });\n    setIsButtonClicked(true);\n  };\n\n  const handleResetOrder = () => {\n    setReorderOptions({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n    setIsButtonClicked(false);\n  };\n\n  const shouldShowResetButton = isButtonClicked;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${reorderOptions.sortType === SortType.ALPHABET ? '' : 'is-light'}`}\n          onClick={handleSortAlphabetically}\n          disabled={reorderOptions.sortType === SortType.ALPHABET}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${reorderOptions.sortType === SortType.LENGTH ? '' : 'is-light'}`}\n          onClick={handleSortByLength}\n          disabled={reorderOptions.sortType === SortType.LENGTH}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${reorderOptions.isReversed ? '' : 'is-light'}`}\n          onClick={handleReverseOrder}\n        >\n          Reverse\n        </button>\n\n        {shouldShowResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={handleResetOrder}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}